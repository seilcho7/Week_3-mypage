/* apply a natural box layout model to all elements, but allowing components to change */
html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

html, body {
    height: 100%;
    width: 100%;
}

@keyframes roller-coaster {
    0% {
        /* opacity: 0; */
        transform: rotate(0);
    }

    50% {
        /* opacity: 1.0; */
        transform: rotate(270deg);
    }

    100% {
        /* opacity: 0; */
        transform: rotate(-90deg);
    }
}

.logo-text {
    color: black;
    text-shadow: 1px 1px red;
}

/* Use the :hover pseudo-class */
/* .picture-frame:hover
    width: 100%;
    margin: 5px;
    line-height: 0;
    border: 2px solid cornflowerblue;
    display: flex;
    justify-content: center;
    align-items: center;
    
    yes, but we're trying to break it
    display: inline-block;
    display: block;
    position: absolute;
    top: 150px;
}*/

/* Scale the image up if the picture-frame is being hovered. */
.picture-frame:hover img {
    transform: scale(1.05);
    opacity: 1.0;
}
/* state a */
.picture-frame img {
    width: 100%;
    height: 100%;
    opacity: 0.9;
    border-radius: 20%
    /* transition: all .3s ease-in-out .3s; */
    /*  1. proterty names or the word 'all
        2. duration in seconds or ms
        3. timing functions
        4. delay
    */
}
/* state b */
.picture-frame img.big {
/* .picture-frame.big img { */
    /* transform: scale(2.5); */
    /* border-radius: 20%; */
    /* opacity: 1.0; */
    animation: roller-coaster 1s ease-in-out;
}

/* #one {
    left: 0;
    z-index: 10;
    z-index set the order of stacking
} */

/* #two {
    width: 200px;
    left: 200px;
    top: 200px;
    z-index: 11; 
} */

/* #three {
    width: 170px;
    left: 80px;
} */
.picture-frame {
    /* line-height: 0; */
    outline: 3px bold black;
    margin: 10px 15px;
}

.hamster-playground {
    padding: 10px 0;
    /* line-height: 0; */
    /* position: absolute; */
    /* top: 400px; */
    /* left: 200px; */
    /* background: cornflowerblue; */
    /* position: relative; */
    border: 5px dotted black;
    display: flex;
    /* If you set the height, that's how big the element will be. then the hamsters will overflow */
    /* height: 300px; */
    /* min-height: 300px; */
    flex-direction: column;
    /* flex-direction: row-reverse; */
    /* By default, flex-direction is in row */
    /* flex-direction: column; */
    /* How to line up on main axis */
    /* justify-content: flex-start; */
    /* align-content: flex-start; */
    /* How to line up on cross axis */
    /* align-items: center; */
    /* flex-wrap: wrap; */
}

/* it's like an if statement, but for CSS */

@media screen and (min-width: 700px) {

    .picture-frame {
        width: 40%;
        margin: 20px 0;
    }

    .hamster-playground {
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-evenly;
        align-items: center;
    }

    .logo-text {
        font-size: 40px;
        text-align: center;
    }
}

@media screen and (min-width: 1300px) {
    .logo-text {
        font-size: 45px;
        text-align: center;
    }
}